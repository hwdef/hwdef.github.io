<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes on 以梦喂马</title><link>https://hwdef.github.io/tags/kubernetes/</link><description>Recent content in Kubernetes on 以梦喂马</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Thu, 06 Jul 2023 06:46:13 +0000</lastBuildDate><atom:link href="https://hwdef.github.io/tags/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>共享内存</title><link>https://hwdef.github.io/post/%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98/</link><pubDate>Thu, 06 Jul 2023 06:46:13 +0000</pubDate><guid>https://hwdef.github.io/post/%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98/</guid><description>进程间通信最快的方式是什么？ 通过共享内存 那么共享内存是什么？ 简单说，就是可以被多个进程访问的同一块内存。 具体使用上，在 Linux 中，有个设备，路径是</description></item><item><title>Kubelet在windows下获取的cpu数量不正确</title><link>https://hwdef.github.io/post/kubelet%E5%9C%A8windows%E4%B8%8B%E8%8E%B7%E5%8F%96%E7%9A%84cpu%E6%95%B0%E9%87%8F%E4%B8%8D%E6%AD%A3%E7%A1%AE/</link><pubDate>Wed, 14 Apr 2021 17:09:42 +0800</pubDate><guid>https://hwdef.github.io/post/kubelet%E5%9C%A8windows%E4%B8%8B%E8%8E%B7%E5%8F%96%E7%9A%84cpu%E6%95%B0%E9%87%8F%E4%B8%8D%E6%AD%A3%E7%A1%AE/</guid><description>在 window 系统中，如果 cpu 的核心数量超过 64 个，那么 windows 会对 cpu 进行分组。例如 72 核的 cpu，会被分为两个 36 核的 cpu 组。分组是为了更好的性能，但是分组也会带来</description></item><item><title>树莓派安装k8s注意事项</title><link>https://hwdef.github.io/post/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85k8s%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</link><pubDate>Mon, 14 Dec 2020 13:53:45 +0800</pubDate><guid>https://hwdef.github.io/post/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85k8s%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</guid><description>树莓派 4b 已经有了 8g 版本，不只是 k3s，就算运行 k8s 也是可以了。我分别在 2g 和 8g 版本的树莓派上，使用 raspberry pi OS 和 ubuntu server 尝试了 k3s 和 k8s，有一些注意事项，</description></item><item><title>解决社区贡献时遇到的冲突</title><link>https://hwdef.github.io/post/%E8%A7%A3%E5%86%B3%E7%A4%BE%E5%8C%BA%E8%B4%A1%E7%8C%AE%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E5%86%B2%E7%AA%81/</link><pubDate>Fri, 03 Jul 2020 11:18:43 +0800</pubDate><guid>https://hwdef.github.io/post/%E8%A7%A3%E5%86%B3%E7%A4%BE%E5%8C%BA%E8%B4%A1%E7%8C%AE%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E5%86%B2%E7%AA%81/</guid><description>在 github/kubernetes 社区做贡献，可能遇到很久都没人 approve 的情况，如果别人提交的代码与你的代码产生了冲突，就会提示你解决冲突，并且 rebase。 网页上操作还是不习</description></item><item><title>Kubeadm指定镜像源</title><link>https://hwdef.github.io/post/kubeadm%E6%8C%87%E5%AE%9A%E9%95%9C%E5%83%8F%E6%BA%90/</link><pubDate>Fri, 29 May 2020 11:14:10 +0800</pubDate><guid>https://hwdef.github.io/post/kubeadm%E6%8C%87%E5%AE%9A%E9%95%9C%E5%83%8F%E6%BA%90/</guid><description>kubeadm 默认使用的镜像源是谷歌的，众所周知的原因，使用体验并不好。 解决方法无非就是两个： 科学上网 换源 kubeadm 换源的方式很方便，只需在 init 的时候使用 --image-repository 参数，</description></item><item><title>去除k8s节点的污点（taint）</title><link>https://hwdef.github.io/post/%E5%8E%BB%E9%99%A4k8s%E8%8A%82%E7%82%B9%E7%9A%84%E6%B1%A1%E7%82%B9taint/</link><pubDate>Thu, 02 Jan 2020 22:30:02 +0800</pubDate><guid>https://hwdef.github.io/post/%E5%8E%BB%E9%99%A4k8s%E8%8A%82%E7%82%B9%E7%9A%84%E6%B1%A1%E7%82%B9taint/</guid><description>首先查看 node 的对应规则 kubectl describe node master |grep -E &amp;#39;(Roles|Taints)&amp;#39; 其中 master 为对应 node 的名字。 之后修改查询出来的规则 kubectl taint node master node-role.kubernetes.io/master- 同样，master 也是名字，最后的-代表去除规则 输出</description></item><item><title>K8s删除核心组件的pod</title><link>https://hwdef.github.io/post/k8s%E5%88%A0%E9%99%A4%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6%E7%9A%84pod/</link><pubDate>Thu, 31 Oct 2019 17:21:07 +0800</pubDate><guid>https://hwdef.github.io/post/k8s%E5%88%A0%E9%99%A4%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6%E7%9A%84pod/</guid><description>kubernetes 有很多核心组件，例如 etcd 和 apiserver ，这些核心组件都可以用下面的命令查到。 kubectl get pods --all-namespaces 这些组件都在 kube-system 的 namespace 下， 那么如果你自己更改了这些组件的代码，然后想将</description></item><item><title>Centos7用kubeadm部署k8s集群踩坑</title><link>https://hwdef.github.io/post/centos7%E9%83%A8%E7%BD%B2k8s%E9%9B%86%E7%BE%A4%E8%B8%A9%E5%9D%91/</link><pubDate>Fri, 11 Oct 2019 10:21:40 +0800</pubDate><guid>https://hwdef.github.io/post/centos7%E9%83%A8%E7%BD%B2k8s%E9%9B%86%E7%BE%A4%E8%B8%A9%E5%9D%91/</guid><description>将 k8s 集群从 ubuntu 换到了 centos，用 kubeadm 部署遇到了几个坑，记录一下 1.epel centos 默认源里什么都没有，安装 epel 是必须的。 sudo yum install epel-release 2.hostname 2.1 centos 特别坑的一点是，host</description></item></channel></rss>